#!/usr/bin/env ruby
require_relative "nom"

commands = [
    [ "status", nil, nil, "Display a short food log and remaining energy" ],
    [ "nom", "n", "<description> <energy>", "Report that you ate something" ],
    [ "weight", "w", "<weight>", "Report a weight measurement" ],
    [ "search", "s", "<term>", "Search for a food item in the web" ],
    [ "plot", "p", nil, "Plot a weight graph" ],
    [ "log", "l", nil, "Show all inputs" ],
    [ "grep", "g", "<term>", "" ],
    [ "edit", "e", nil, "" ],
    [ "editw", "ew", nil, "" ],
    [ "help", nil, nil, "Print this help" ],
]

nom = Nom.new

cmd_name = ARGV.shift or "status"
command = commands.find{|c| c[0] == cmd_name or c[1] == cmd_name}

if command.nil?
    ARGV.unshift(cmd_name)
    if ARGV.last.to_f != 0
        if ARGV.size > 1
            command = commands.find{|c| c[0] == "nom"}
        else
            command = commands.find{|c| c[0] == "weight"}
        end
    else
        command = commands.find{|c| c[0] == "search"}
    end
end

if command[0] == "help"
    puts "Available subcommands:"
    commands.each do |c|
        puts "  "+"#{c[0]} #{c[2]}".ljust(28)+c[3]
    end
    puts "There are some useful defaults:"
    puts "  "+"<number>".ljust(28)+"weight <number>"
    puts "  "+"<term>".ljust(28)+"search <term>"
    puts "  "+"<term> <number>".ljust(28)+"nom <term> <number>"
else
    begin
        if ARGV.empty?
            nom.send(command[0])
        else
            nom.send(command[0], ARGV)
        end
    rescue Exception => e
        puts e.message
        puts "Usage: nom #{command[0]} #{command[2]}"
    end
end
